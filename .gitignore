import pandas as pd
import matplotlib.pyplot as plt

# Define a function to calculate mean
def calculate_mean(data):
    return sum(data) / len(data)

# Define a function to calculate variance
def calculate_variance(data):
    mean = calculate_mean(data)
    squared_diff = [(x - mean) ** 2 for x in data]
    return sum(squared_diff) / (len(data) - 1)

# Define a function to calculate standard deviation
def calculate_std_deviation(data):
    return calculate_variance(data) ** 0.5

# Define a function to calculate z-scores
def calculate_z_scores(data):
    mean = calculate_mean(data)
    std_dev = calculate_std_deviation(data)
    return [(x - mean) / std_dev for x in data]

# Define a function to calculate median (𝑥)
def calculate_median(data):
    sorted_data = sorted(data)
    n = len(data)
    if n % 2 == 0:
        median = (sorted_data[n // 2 - 1] + sorted_data[n // 2]) / 2
    else:
        median = sorted_data[n // 2]
    return median

# Define a function to calculate quartiles (𝑄1 and 𝑄3)
def calculate_quartiles(data):
    sorted_data = sorted(data)
    n = len(data)
    if n % 2 == 0:
        lower_half = sorted_data[:n // 2]
        upper_half = sorted_data[n // 2:]
        q1 = calculate_median(lower_half)
        q3 = calculate_median(upper_half)
    else:
        lower_half = sorted_data[:n // 2]
        upper_half = sorted_data[n // 2 + 1:]
        q1 = calculate_median(lower_half)
        q3 = calculate_median(upper_half)
    return q1, q3

# Read data from the Excel file
data = pd.read_excel("original_diabetes.xlsx")

# Calculate statistics for "Glucose"
glucose_data = data["Glucose"]
glucose_mean = calculate_mean(glucose_data)
glucose_variance = calculate_variance(glucose_data)
glucose_std_deviation = calculate_std_deviation(glucose_data)
glucose_z_scores = calculate_z_scores(glucose_data)
glucose_median = calculate_median(glucose_data)
glucose_q1, glucose_q3 = calculate_quartiles(glucose_data)

# Calculate statistics for "BloodPressure"
blood_pressure_data = data["BloodPressure"]
bp_mean = calculate_mean(blood_pressure_data)
bp_variance = calculate_variance(blood_pressure_data)
bp_std_deviation = calculate_std_deviation(blood_pressure_data)
bp_z_scores = calculate_z_scores(blood_pressure_data)
bp_median = calculate_median(blood_pressure_data)
bp_q1, bp_q3 = calculate_quartiles(blood_pressure_data)

# Create boxplots
plt.boxplot([glucose_data, blood_pressure_data], labels=["Glucose", "Blood Pressure"])
plt.title("Boxplots of Glucose and Blood Pressure")
plt.show()

# Display the calculated statistics
print("Statistics for Glucose:")
print(f"Mean: {glucose_mean}")
print(f"Variance: {glucose_variance}")
print(f"Standard Deviation: {glucose_std_deviation}")
print(f"Z-Scores: {glucose_z_scores}")
print(f"Median (𝑥): {glucose_median}")
print(f"Quartiles (𝑄1, 𝑄3): {glucose_q1}, {glucose_q3}")

print("\nStatistics for Blood Pressure:")
print(f"Mean: {bp_mean}")
print(f"Variance: {bp_variance}")
print(f"Standard Deviation: {bp_std_deviation}")
print(f"Z-Scores: {bp_z_scores}")
print(f"Median (𝑥): {bp_median}")
print(f"Quartiles (𝑄1, 𝑄3): {bp_q1}, {bp_q3}")
